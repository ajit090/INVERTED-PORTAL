# Generated by Django 2.2 on 2022-07-19 13:14

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AdditionalInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150)),
            ],
            options={
                'verbose_name_plural': 'ADDITIONAL INFO',
            },
        ),
        migrations.CreateModel(
            name='Battery',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('serial_no', models.CharField(max_length=100)),
                ('battery_type', models.CharField(max_length=50)),
                ('short_cell_description', models.CharField(max_length=150)),
                ('long_cell_description', models.CharField(max_length=250)),
                ('bms_specification', models.CharField(max_length=100)),
                ('cell_brand', models.CharField(max_length=100)),
                ('matal_case_specification', models.CharField(max_length=100)),
                ('nickel_specification', models.CharField(max_length=100)),
                ('nickel_weight', models.CharField(max_length=50)),
                ('nominal_voltage', models.CharField(max_length=50)),
                ('nominal_capacity', models.CharField(max_length=50)),
            ],
            options={
                'verbose_name_plural': 'BATTERY',
            },
        ),
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('client_name', models.CharField(max_length=100)),
                ('client_no', models.BigIntegerField()),
            ],
            options={
                'verbose_name_plural': 'CLIENT',
            },
        ),
        migrations.CreateModel(
            name='Customerissue',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150)),
            ],
            options={
                'verbose_name_plural': 'CUSTOMER ISSUE',
            },
        ),
        migrations.CreateModel(
            name='Dealer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dealer_name', models.CharField(max_length=100)),
                ('location', models.CharField(max_length=150)),
                ('state_ut', models.CharField(max_length=150)),
            ],
            options={
                'verbose_name_plural': 'DEALER',
            },
        ),
        migrations.CreateModel(
            name='Diagnosis',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('diagnosis', models.CharField(max_length=150)),
            ],
            options={
                'verbose_name_plural': 'DIAGNOSIS',
            },
        ),
        migrations.CreateModel(
            name='IssueRaisedBy',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('customer', models.CharField(max_length=150)),
            ],
            options={
                'verbose_name_plural': 'CUSTOMER Raised By',
            },
        ),
        migrations.CreateModel(
            name='Oem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('oem', models.CharField(max_length=100)),
            ],
            options={
                'verbose_name_plural': 'OEM',
            },
        ),
        migrations.CreateModel(
            name='Priority',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('priority', models.CharField(max_length=100)),
            ],
            options={
                'verbose_name_plural': 'PRIORITY',
            },
        ),
        migrations.CreateModel(
            name='Resolution',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('resolution', models.CharField(max_length=150)),
            ],
            options={
                'verbose_name_plural': 'RESOLUTION',
            },
        ),
        migrations.CreateModel(
            name='Resolutiontype',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('resolution_type', models.CharField(max_length=250)),
            ],
            options={
                'verbose_name_plural': 'RESOLUTION TYPE',
            },
        ),
        migrations.CreateModel(
            name='Specification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('specification', models.CharField(max_length=150)),
            ],
            options={
                'verbose_name_plural': 'SPECIFICATION',
            },
        ),
        migrations.CreateModel(
            name='Status',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(max_length=100)),
            ],
            options={
                'verbose_name_plural': 'STATUS',
            },
        ),
        migrations.CreateModel(
            name='Complaint',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comments', models.CharField(blank=True, max_length=100)),
                ('complaint_id', models.IntegerField()),
                ('soft_pack_serial_no', models.CharField(blank=True, max_length=50)),
                ('register_date', models.DateTimeField()),
                ('observations', models.CharField(blank=True, max_length=250)),
                ('tracker', models.CharField(blank=True, max_length=100)),
                ('pickup_date', models.DateTimeField(blank=True, null=True)),
                ('receipt_date', models.DateTimeField(blank=True, null=True)),
                ('closure_date', models.DateTimeField(blank=True, null=True)),
                ('remark', models.CharField(max_length=150)),
                ('additional_comments', models.CharField(blank=True, max_length=150)),
                ('capacity_after_testing', models.CharField(blank=True, max_length=100)),
                ('final_remarks', models.CharField(blank=True, max_length=100)),
                ('remarks_dispatched', models.CharField(blank=True, max_length=250)),
                ('additional_info', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='add2', to='Model.AdditionalInfo')),
                ('assign_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='Assigned_by', to=settings.AUTH_USER_MODEL)),
                ('battery', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='Model.Battery')),
                ('client', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='Model.Client')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='Created_by', to=settings.AUTH_USER_MODEL)),
                ('customer_issue', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='cissues1', to='Model.Customerissue')),
                ('dealer', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='Model.Dealer')),
                ('diagnosis', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='Model.Diagnosis')),
                ('issue_raised_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='Model.IssueRaisedBy')),
                ('resolution', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='Model.Resolution')),
                ('resolution_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='Model.Resolutiontype')),
                ('status', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='Model.Status')),
            ],
            options={
                'verbose_name_plural': 'COMPLAINT',
            },
        ),
        migrations.AddField(
            model_name='battery',
            name='oem',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='Model.Oem'),
        ),
        migrations.AddField(
            model_name='battery',
            name='specification',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='Model.Specification'),
        ),
        migrations.AddField(
            model_name='additionalinfo',
            name='customer_issue',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='additionalinfos', to='Model.Customerissue'),
        ),
    ]
